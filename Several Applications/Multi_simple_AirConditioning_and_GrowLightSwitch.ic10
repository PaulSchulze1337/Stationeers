##########################################################################################
# This script has two purposes:
# A) Grow light control depending on the day-night cycle
# B) Simple air conditioning control using radiators and a digital valve
##########################################################################################
## SETUP Grow Light Control (day-night cycle) ##
alias solarSensor d0 # (for SolarAngle detec.)
# Hashes for lights for batch write later
define growLightshash -1758710260
# Variables
alias verticalSunAngle r0 # vertical deg of sol
## SETUP Air Conditioning ##
alias gasSensor d1 # gas sensor to read indoor temperature in Kelvin
alias digitalValve d2 # digital valve to open and close pipe segment
alias tempK r0 # temperature in Kelvin
alias tempC r1 # temperature in Celsius
#
define maxTemp 25 # maximum temperature until cooling is activated
define minTemp 20 # minimum temperature until cooling is deactivated
##########################################################################################

main:
yield # wait for 1 tick

## Grow Light Control (day-night cycle) ##
# determine state of day by the vertical angle of solar sensor
# if vertical angle is <= 90 deg, then it is day (otherwise it is night)
l verticalSunAngle solarSensor Vertical
s db Setting verticalSunAngle # FOR DEBUG: Write current vertical angle to housing
bgeal verticalSunAngle 90 turnLightsOff # if vertical angle >= 90, then it is night
bltal verticalSunAngle 90 turnLightsOn # if vertical angle < 90, then it is day

## Air Conditioning Control ##
yield # wait for 1 cycle
l tempK gasSensor Temperature # temp in K
sub tempC tempK 273.15 # convert to Celsius
round tempC tempC
s db Setting tempC # FOR DEBUG: Write current temp to housing
bgtal tempC maxTemp setValveToOpen
bleal tempC minTemp setValveToClose
j main # jump back where we came from


turnLightsOn:
sb growLightshash On 1 #for all lights
j ra # jump back where we came from

turnLightsOff:
sb growLightshash On 0 #for all lights
j ra # jump back where we came from

setValveToOpen:
s digitalValve On 1
j ra

setValveToClose:
s digitalValve On 0
j ra
# EOF